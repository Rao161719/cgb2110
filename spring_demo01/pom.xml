<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jt</groupId>
    <artifactId>spring_demo01</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring_demo01</name>
    <description>Demo project for Spring Boot</description>
    <!--maven项目的配置信息,指定字符集和版本-->
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.3.7.RELEASE</spring-boot.version>
    </properties>
    <!--依赖项-->
    <dependencies>
        <!--具体的某个依赖
            1.依赖的构成3要素 称之为坐标
                1)组ID
                2)项目名
                3)版本号
            2.坐标和本地仓库的关系?
                根据坐标去本地仓库中找jar包文件
            3.如果报错,则检查本地仓库中是否有jar包,或者版本是否一致
         -->
        <dependency>
            <groupId>org.springframework.boot</groupId>     <!--groupId:本地仓库中包路径:org/springframework/boot-->
            <artifactId>spring-boot-starter-web</artifactId><!--在目录:org/springframework/boot中的文件:spring-boot-starter-web-->
            <version>2.3.7.RELEASE</version><!--自己加上的--> <!--在文件/spring-boot-starter-web下的文件:2.3.7.RELEASE-->
                                                            <!--所需要的jar包就在:
                                                                本地仓库名\org\springframework\boot\spring-boot-starter-web\2.3.7.RELEASE\...-->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.3.7.RELEASE</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <!--依赖的管理器:指定相关的依赖的版本信息
                上面导入依赖应该有版本号的,但是没有写,是在这里写上的-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--
        build标签
            1.build中的插件缺一不可
            2.mainClass中的路径必须与主启动类一致
            3.如果以后修改或粘贴复制代码,只操作dependencies内容即可
    -->
    <build>
        <plugins>
            <!--maven工具负责编译当前的项目-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!--springboot项目依赖maven的必要工具-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.7.RELEASE</version>
                <configuration>
                    <!--主启动类的类路径-->
                    <mainClass>com.jt.SpringDemo01Application</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>